#Change the broker id 
{% for host in groups['kafka_servers'] %}
{%   if inventory_hostname == host %}
broker.id={{ loop.index }}
{%   endif %}
{% endfor %}
#Change the internal IP
{% for host in groups['kafka_servers'] %}
{%   if inventory_hostname == host %}
listeners=PLAINTEXT://{{ ansible_default_ipv4.address }}:9092
advertised.listeners=PLAINTEXT://{{ ansible_default_ipv4.address }}:9092
{%   endif %}
{% endfor %}
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=2147483647
log.dirs=/data/kafka/logs/
num.partitions=5
log.retention.hours=6
log.segment.bytes=2147483647
log.retention.check.interval.ms=300000

############################# Zookeeper #############################
zookeeper.connect={% for host in groups['zookeeper_servers'] %}{{ hostvars[host].ansible_fqdn }}:2181{% if not loop.last %},{% endif %}{% endfor %}


# Timeout in ms for connecting to zookeeper
zookeeper.connection.timeout.ms=6000

#######################################################
group.initial.rebalance.delay.ms=0
message.max.bytes=2147483647
max.message.bytes=2147483647
reserved.broker.max.id=10000000
auto.leader.rebalance.enable=true
delete.topic.enable=true
default.replication.factor=3
replica.lag.time.max.ms=100000
replica.fetch.wait.max.ms=5000
queued.max.requests=8192
num.replica.fetchers=6
num.network.threads=16
num.recovery.threads.per.data.dir=3
num.io.threads=16
replica.socket.receive.buffer.bytes=2147483647
replica.fetch.max.bytes=2147483647
message.timestamp.type=LogAppendTime
group.max.session.timeout.ms=7200000
